name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          # scope: '@tu-org'  # si el paquete está scoped

      - name: Configure npm auth (project)
        run: |
          cat > .npmrc <<'EOF'
          //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          always-auth=true
          registry=https://registry.npmjs.org
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug npm config
        run: |
          npm config get registry
          npm whoami || true
          echo "---- Project .npmrc ----"
          cat .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify build output
        run: |
          echo "Checking dist directory contents:"
          ls -la dist/
          echo "Verifying main files exist:"
          test -f dist/index.js && echo "✓ CJS build exists"
          test -f dist/index.mjs && echo "✓ ESM build exists"
          test -f dist/index.d.ts && echo "✓ TypeScript declarations exist"

      - name: Check if version matches tag (for release trigger)
        if: github.event_name == 'release'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Package version: $PACKAGE_VERSION"
          echo "Tag version: $TAG_VERSION"
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "❌ Version mismatch: package.json version ($PACKAGE_VERSION) does not match tag ($TAG_VERSION)"
            exit 1
          fi
          echo "✓ Version matches tag"

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
